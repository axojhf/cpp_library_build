name: Curl Build

on:
  push:
    branches:
      - httplib
jobs:
  # cpr-mingw64-build:
  #   name: Cpr Vcpkg MinGW64 Build
  #   runs-on: windows-2019
  #   steps:
  #     - name: Set Mingw64 Ninja
  #       run: |
  #         (new-object System.Net.WebClient).DownloadFile('https://github.com/cristianadam/mingw-builds/releases/download/v11.2.0-rev3/x86_64-11.2.0-release-posix-seh-rt_v9-rev3.7z','mingw64.7z')
  #         7z x -aoa -oC:\ mingw64.7z
  #         rm mingw64.7z
  #         (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
  #         7z x -aoa -oC:\ninja ninja-win.zip
  #         rm ninja-win.zip
  #     - name: Build
  #       run: |
  #         $env:Path = "C:\mingw64\bin;C:\ninja;$env:Path"
  #         cd C:\vcpkg
  #         git pull
  #         ./bootstrap-vcpkg.bat
  #         vcpkg install curl[non-http,ssl,http2,schannel]:x64-mingw-static cpr:x64-mingw-static
  #     - name: Package Directories
  #       run: |
  #         # 7z a cpr_MinGW64_Static.7z C:\vcpkg\installed\x64-mingw-static\lib C:\vcpkg\installed\x64-mingw-static\include
  #         vcpkg export curl:x64-mingw-static cpr:x64-mingw-static nghttp2:x64-mingw-static zlib:x64-mingw-static --7zip --output=cpr_MinGW64_Static
  #         ls
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: cpr_MinGW64_Static
  #         path: C:\vcpkg\cpr_MinGW64_Static.7z

  curl-mingw64-latest-build:
    name: Curl Latest MinGW64 Build
    runs-on: windows-2019
    steps:
      - name: Set Mingw64 Ninja
        run: |
          (new-object System.Net.WebClient).DownloadFile('https://github.com/cristianadam/mingw-builds/releases/download/v11.2.0-rev3/x86_64-11.2.0-release-posix-seh-rt_v9-rev3.7z','mingw64.7z')
          7z x -aoa -oC:\ mingw64.7z
          rm mingw64.7z
          (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
          7z x -aoa -oC:\ninja ninja-win.zip
          rm ninja-win.zip
          (new-object System.Net.WebClient).DownloadFile('https://github.com/axojhf/build_openssl/releases/download/build/openssl3_mingw_static.7z','openssl3.7z')
          7z x -aoa -oC:\ openssl3.7z
          rm openssl3.7z
          mv C:\openssl3\lib64 C:\openssl3\lib
          (new-object System.Net.WebClient).DownloadFile('https://github.com/yhirose/cpp-httplib/archive/refs/tags/v0.11.3.zip','cpp-httplib.zip')
          7z x -aoa -oC:\ cpp-httplib.zip
          rm cpp-httplib.zip

      - name: Build
        run: |
          $env:Path = "C:\mingw64\bin;C:\ninja;$env:Path"
          cd C:\vcpkg
          git pull
          ./bootstrap-vcpkg.bat
          # libssh2:x64-mingw-static
          vcpkg install zlib:x64-mingw-static brotli:x64-mingw-static
          
          $env:Path = "C:\openssl3\lib;C:\openssl3\include;C:\vcpkg\installed\x64-mingw-static\lib;C:\vcpkg\installed\x64-mingw-static\include;$env:Path"
          cd C:\cpp-httplib-0.11.3
          mkdir build
          cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake -DCMAKE_INSTALL_PREFIX=C:\cpp-httplib -DBUILD_SHARED_LIBS=OFF -DHTTPLIB_REQUIRE_OPENSSL=ON -DHTTPLIB_REQUIRE_ZLIB=ON -DHTTPLIB_COMPILE=ON -DHTTPLIB_REQUIRE_BROTLI=ON
          ninja
          ninja install

      - name: Package Directories
        run: |
          cp -r C:\vcpkg\installed\x64-mingw-static\lib C:\cpp-httplib -Force
          cp -r C:\vcpkg\installed\x64-mingw-static\include C:\cpp-httplib -Force
          7z a cpp-httplib_MinGW64_Static.7z C:\cpp-httplib
      - uses: actions/upload-artifact@v3
        with:
          name: cpp-httplib_MinGW64_Static
          path: cpp-httplib_MinGW64_Static.7z

  # coost-vc143-build:
  #   name: Coost Vcpkg vc143 Build
  #   runs-on: windows-2022
  #   steps:
  #     - name: Set Mingw64 Ninja
  #       run: |
  #         (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
  #         7z x -aoa -oC:\ninja ninja-win.zip
  #         rm ninja-win.zip
  #         (new-object System.Net.WebClient).DownloadFile('https://github.com/axojhf/build_openssl/releases/download/build/openssl3_vc143_static.7z','openssl3.7z')
  #         7z x -aoa -oC:\ openssl3.7z
  #         rm openssl3.7z
  #         cd C:/
  #         git clone --depth 1 https://github.com/idealvin/coost.git
  #     - uses: ilammy/msvc-dev-cmd@v1
  #       with:
  #         arch: amd64
  #         toolset: 14.3
  #     - name: Build
  #       run: |
  #         $env:Path = "C:\ninja;C:\openssl3\lib;C:\openssl3\include;C:\openssl3\bin;$env:Path"
  #         cd C:\vcpkg
  #         git pull
  #         ./bootstrap-vcpkg.bat
  #         vcpkg install curl[core,non-http,ssl,winssl,http2,brotli]:x64-windows-static
  #         $env:Path = "C:\vcpkg\installed\x64-windows-static\lib;C:\vcpkg\installed\x64-windows-static\include;$env:Path"
  #         cd C:\coost
  #         mkdir build
  #         cd build
  #         cmake .. -DWITH_LIBCURL=ON -DWITH_OPENSSL=ON -G Ninja -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=C:\coost\install
  #         cmake --build . --config Release
  #         cmake --install . --config Release
  #     - name: Package Directories
  #       run: |
  #         7z a coost_VC143_Static.7z C:\vcpkg\installed\x64-windows-static\lib C:\vcpkg\installed\x64-windows-static\include C:\coost\install
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: coost_vcpkg_VC143_Static
  #         path: coost_VC143_Static.7z

  # coost-vc143-mini-build:
  #   name: Coost vc143 mini Build
  #   runs-on: windows-2022
  #   steps:
  #     - name: Set Mingw64 Ninja
  #       run: |
  #         (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
  #         7z x -aoa -oC:\ninja ninja-win.zip
  #         rm ninja-win.zip
  #         cd C:/
  #         git clone --depth 1 https://github.com/idealvin/coost.git
  #     - uses: ilammy/msvc-dev-cmd@v1
  #       with:
  #         arch: amd64
  #         toolset: 14.3
  #     - name: Build
  #       run: |
  #         $env:Path = "C:\ninja;$env:Path"
  #         cd C:\coost
  #         mkdir build
  #         cd build
  #         cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=C:\coost\install
  #         cmake --build . --config Release
  #         cmake --install . --config Release
  #     - name: Package Directories
  #       run: |
  #         7z a coost_VC143_mini_Static.7z C:\coost\install
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: coost_VC143_mini_Static
  #         path: coost_VC143_mini_Static.7z