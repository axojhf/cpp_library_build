name: Cpr Build

on:
  push:
    branches:
      - cpr
jobs:
  # cpr-mingw64-build:
  #   name: Cpr Vcpkg MinGW64 Build
  #   runs-on: windows-2019
  #   steps:
  #     - name: Set Mingw64 Ninja
  #       run: |
  #         (new-object System.Net.WebClient).DownloadFile('https://github.com/cristianadam/mingw-builds/releases/download/v11.2.0-rev3/x86_64-11.2.0-release-posix-seh-rt_v9-rev3.7z','mingw64.7z')
  #         7z x -aoa -oC:\ mingw64.7z
  #         rm mingw64.7z
  #         (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
  #         7z x -aoa -oC:\ninja ninja-win.zip
  #         rm ninja-win.zip
  #     - name: Build
  #       run: |
  #         $env:Path = "C:\mingw64\bin;C:\ninja;$env:Path"
  #         cd C:\vcpkg
  #         git pull
  #         ./bootstrap-vcpkg.bat
  #         vcpkg install curl[non-http,ssl,http2,schannel]:x64-mingw-static cpr:x64-mingw-static
  #     - name: Package Directories
  #       run: |
  #         # 7z a cpr_MinGW64_Static.7z C:\vcpkg\installed\x64-mingw-static\lib C:\vcpkg\installed\x64-mingw-static\include
  #         vcpkg export curl:x64-mingw-static cpr:x64-mingw-static nghttp2:x64-mingw-static zlib:x64-mingw-static --7zip --output=cpr_MinGW64_Static
  #         ls
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: cpr_MinGW64_Static
  #         path: C:\vcpkg\cpr_MinGW64_Static.7z

  # coost-mingw64-latest-build:
  #   name: Cpr Latest MinGW64 Build
  #   runs-on: windows-2019
  #   steps:
  #     - name: Set Mingw64 Ninja
  #       run: |
  #         (new-object System.Net.WebClient).DownloadFile('https://github.com/cristianadam/mingw-builds/releases/download/v11.2.0-rev3/x86_64-11.2.0-release-posix-seh-rt_v9-rev3.7z','mingw64.7z')
  #         7z x -aoa -oC:\ mingw64.7z
  #         rm mingw64.7z
  #         (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
  #         7z x -aoa -oC:\ninja ninja-win.zip
  #         rm ninja-win.zip
  #         (new-object System.Net.WebClient).DownloadFile('https://github.com/axojhf/build_openssl/releases/download/build/openssl3_mingw_static.7z','openssl3.7z')
  #         7z x -aoa -oC:\ openssl3.7z
  #         rm openssl3.7z
  #         mv C:\openssl3\lib64 C:\openssl3\lib
  #         (new-object System.Net.WebClient).DownloadFile('https://curl.se/download/curl-7.87.0.zip','curl.zip')
  #         7z x -aoa -oC:\ curl.zip
  #         rm curl.zip
  #         cd C:/
  #         # git clone --depth 1 https://github.com/axojhf/cpr.git -b mod
  #         git clone --depth 1 https://github.com/libcpr/cpr.git
  #         git clone --depth 1 https://github.com/google/brotli.git
  #         git clone --depth 1 https://github.com/nibanks/msh3.git
  #     - name: Build
  #       run: |
  #         $env:Path = "C:\mingw64\bin;C:\ninja;$env:Path"
  #         cd C:\vcpkg
  #         git pull
  #         ./bootstrap-vcpkg.bat
  #         # libssh2:x64-mingw-static
  #         vcpkg install zstd:x64-mingw-static zlib:x64-mingw-static nghttp2:x64-mingw-static
          
  #         cd C:/brotli
  #         mkdir build_mingw64
  #         cd build_mingw64
  #         cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:\brotli_install -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
  #         ninja
  #         ninja install
          
  #         $env:Path = "C:\msh3_install;C:\msh3_install\include;C:\msh3_install\lib;C:\brotli_install\include;C:\brotli_install\lib;C:\vcpkg\installed\x64-mingw-static\lib;C:\vcpkg\installed\x64-mingw-static\include;$env:Path"
  #         cd C:/curl-7.87.0
  #         mkdir build
  #         cd build
  #         cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_CURL_EXE=OFF -DBUILD_TESTING=OFF -DCURL_USE_SCHANNEL=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:/curl -DCURL_USE_LIBSSH2=OFF -DCURL_BROTLI=ON -DCURL_ZSTD=ON -DUSE_NGHTTP2=ON -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
  #         ninja
  #         ninja install
          
  #         cd C:/cpr
  #         mkdir build
  #         cd build
  #         $env:Path = "C:\curl;C:\curl\lib;C:\curl\include;$env:Path"
  #         cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCPR_USE_SYSTEM_CURL=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:/cpr_install -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake -DCURL_LIBRARY=C:/curl/lib/libcurl.a -DCURL_INCLUDE_DIR=C:/curl/include
  #         ninja
  #         ninja install

  #     - name: Package Directories
  #       run: |
  #         7z a cpr_latest_MinGW64_Static.7z C:\curl C:\cpr_install C:\brotli_install
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: cpr_latest_MinGW64_Static
  #         path: cpr_latest_MinGW64_Static.7z

  cpr-mingw64-build:
    name: Cpr MinGW64 Build
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3
      - name: Set Mingw64 Ninja
        run: |
          (new-object System.Net.WebClient).DownloadFile('https://github.com/cristianadam/mingw-builds/releases/download/v11.2.0-rev3/x86_64-11.2.0-release-posix-seh-rt_v9-rev3.7z','mingw64.7z')
          7z x -aoa -oC:\ mingw64.7z
          rm mingw64.7z
          (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
          7z x -aoa -oC:\ninja ninja-win.zip
          rm ninja-win.zip
          (new-object System.Net.WebClient).DownloadFile('https://github.com/axojhf/cpp_library_build/releases/download/curl-build/curl_MinGW64_Static.7z','curl.7z')
          7z x -aoa -oC:\ curl.7z
          rm curl.7z
          cp libcurl.pc C:\curl\lib\pkgconfig -Force
      - name: Build
        run: |
          $env:Path = "C:\mingw64\bin;C:\ninja;C:\curl;C:\curl\lib;C:\curl\include;$env:Path"
          cd C:\
          git clone --depth 1 https://github.com/axojhf/cpr.git -b mod
          cd C:\cpr ; mkdir build ; cd build
          $env:PKG_CONFIG_PATH="C:\curl\lib\pkgconfig"
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCPR_USE_SYSTEM_CURL=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:/cpr_install -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          ninja
          ninja install
      - name: Package Directories
        run: |
          cp -r C:\curl\lib C:\cpr_install -Force
          cp -r C:\curl\include C:\cpr_install -Force
          7z a cpr_MinGW64_Static.7z C:\cpr_install
      - uses: actions/upload-artifact@v3
        with:
          name: cpr_MinGW64_Static
          path: cpr_MinGW64_Static.7z

  cpr-vc143-static-build:
    name: Cpr vc143 Static Build
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
      - name: Set Ninja
        run: |
          (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
          7z x -aoa -oC:\ninja ninja-win.zip
          rm ninja-win.zip
          (new-object System.Net.WebClient).DownloadFile('https://github.com/axojhf/cpp_library_build/releases/download/curl-build/curl_VC143_Static.7z','curl.7z')
          7z x -aoa -oC:\ curl.7z
          rm curl.7z
          cp libcurl.pc C:\curl\lib\pkgconfig -Force
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64
          toolset: 14.3
      - name: Build
        run: |
          $env:Path = "C:\ninja;C:\curl;C:\curl\lib;C:\curl\include;$env:Path"
          cd C:\
          git clone --depth 1 https://github.com/axojhf/cpr.git -b mod
          cd C:\cpr ; mkdir build ; cd build
          $env:PKG_CONFIG_PATH="C:\curl\lib\pkgconfig"
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCPR_USE_SYSTEM_CURL=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:/cpr_install -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          ninja
          ninja install
      - name: Package Directories
        run: |
          cp -r C:\curl\lib C:\cpr_install -Force
          cp -r C:\curl\include C:\cpr_install -Force
          7z a cpr_VC143_Static.7z C:\cpr_install
      - uses: actions/upload-artifact@v3
        with:
          name: cpr_VC143_Static
          path: cpr_VC143_Static.7z

  cpr-vc143-dyn-build:
    name: Cpr vc143 Dynamic Build
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
      - name: Set Ninja
        run: |
          (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
          7z x -aoa -oC:\ninja ninja-win.zip
          rm ninja-win.zip
          (new-object System.Net.WebClient).DownloadFile('https://github.com/axojhf/cpp_library_build/releases/download/curl-build/curl_VC143_Dyn.7z','curl.7z')
          7z x -aoa -oC:\ curl.7z
          rm curl.7z
          cp libcurl.pc C:\curl\lib\pkgconfig -Force
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64
          toolset: 14.3
      - name: Build
        run: |
          $env:Path = "C:\ninja;C:\curl;C:\curl\lib;C:\curl\include;$env:Path"
          cd C:\
          git clone --depth 1 https://github.com/axojhf/cpr.git -b mod
          cd C:\cpr ; mkdir build ; cd build
          $env:PKG_CONFIG_PATH="C:\curl\lib\pkgconfig"
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCPR_USE_SYSTEM_CURL=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:/cpr_install -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          ninja
          ninja install
      - name: Package Directories
        run: |
          cp -r C:\curl\bin C:\cpr_install -Force
          cp -r C:\curl\lib C:\cpr_install -Force
          cp -r C:\curl\include C:\cpr_install -Force
          7z a cpr_VC143_Dyn.7z C:\cpr_install
      - uses: actions/upload-artifact@v3
        with:
          name: cpr_VC143_Dyn
          path: cpr_VC143_Dyn.7z