name: Quiche Build

on:
  push:
    branches:
      - quiche
jobs:
  quiche-mingw64-latest-build:
    name: quiche Latest MinGW64 Build
    runs-on: windows-2019
    steps:
      - name: Set Mingw64 Ninja
        run: |
          curl.exe -o mingw64.7z https://github.com/cristianadam/mingw-builds/releases/download/v11.2.0-rev3/x86_64-11.2.0-release-posix-seh-rt_v9-rev3.7z
          7z x -aoa -oC:\ mingw64.7z ; rm mingw64.7z
          curl.exe -o ninja-win.zip https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip
          7z x -aoa -oC:\ninja ninja-win.zip ; rm ninja-win.zip
          curl.exe -o nasm.zip https://www.nasm.us/pub/nasm/releasebuilds/2.16.01/win64/nasm-2.16.01-win64.zip
          7z x -aoa -oC:\ nasm.zip ; rm nasm.zip
          cd C:\ ; git clone --depth=1 --recursive https://github.com/cloudflare/quiche
      - name: Build
        run: |
          $env:Path = "C:\mingw64\bin;C:\ninja;C:\nasm-2.16.01;$env:Path"
          cd C:\quiche\quiche\deps
          rm -r C:\quiche\quiche\deps\boringssl -Force
          git clone --depth=1 https://github.com/google/boringssl
          rustup target add x86_64-pc-windows-gnu
          rustup default stable-gnu
          cd C:\quiche
          cargo build --package quiche --release --features ffi,pkg-config-meta,qlog
          ls C:\quiche\quiche\deps\boringssl
      - name: Package Directories
        run: |
          mkdir C:\quiche_install\lib
          cp C:\quiche\target\release\libquiche.a C:\quiche_install\lib -Force
          cp -r C:\quiche\quiche\include C:\quiche_install -Force
          7z a quiche_MinGW64_static.7z C:\quiche_install
      - uses: actions/upload-artifact@v3
        with:
          name: quiche_MinGW64_static
          path: quiche_MinGW64_static.7z

  quiche-vc143-static-build:
    name: quiche vc143 static Build
    runs-on: windows-2022
    steps:
      - name: Set Ninja
        run: |
          curl.exe -o ninja-win.zip https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip
          7z x -aoa -oC:\ninja ninja-win.zip ; rm ninja-win.zip
          curl.exe -o nasm.zip https://www.nasm.us/pub/nasm/releasebuilds/2.16.01/win64/nasm-2.16.01-win64.zip
          7z x -aoa -oC:\ nasm.zip ; rm nasm.zip
          cd C:\ ; git clone --depth=1 --recursive https://github.com/cloudflare/quiche
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64
          toolset: 14.3
      - name: Build
        run: |
          $env:Path = "C:\ninja;C:\nasm-2.16.01;$env:Path"
          cd C:\quiche\quiche\deps
          rm -r C:\quiche\quiche\deps\boringssl -Force
          git clone --depth=1 https://github.com/google/boringssl
          rustup target add x86_64-pc-windows-msvc
          rustup default stable-msvc
          cd C:\quiche
          cargo build --package quiche --release --features ffi,pkg-config-meta,qlog
          ls C:\quiche\quiche\deps\boringssl
      - name: Package Directories
        run: |
          mkdir C:\quiche_install\lib
          cp C:\quiche\target\release\libquiche.lib C:\quiche_install\lib -Force
          cp -r C:\quiche\quiche\include C:\quiche_install -Force
          7z a quiche_vc143_static.7z C:\quiche_install
      - uses: actions/upload-artifact@v3
        with:
          name: quiche_vc143_static
          path: quiche_vc143_static.7z

  quiche-mingw64-dyn-build:
    name: quiche MinGW64 Shared Build
    runs-on: windows-2019
    steps:
      - name: Set Mingw64 Ninja
        run: |
          curl.exe -o mingw64.7z https://github.com/cristianadam/mingw-builds/releases/download/v11.2.0-rev3/x86_64-11.2.0-release-posix-seh-rt_v9-rev3.7z
          7z x -aoa -oC:\ mingw64.7z ; rm mingw64.7z
          curl.exe -o ninja-win.zip https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip
          7z x -aoa -oC:\ninja ninja-win.zip ; rm ninja-win.zip
          curl.exe -o nasm.zip https://www.nasm.us/pub/nasm/releasebuilds/2.16.01/win64/nasm-2.16.01-win64.zip
          7z x -aoa -oC:\ nasm.zip ; rm nasm.zip
          cd C:\ ; git clone --depth=1 --recursive https://github.com/cloudflare/quiche
      - name: Build
        run: |
          $env:Path = "C:\mingw64\bin;C:\ninja;C:\nasm-2.16.01;$env:Path"
          cd C:\quiche\quiche\deps
          rm -r C:\quiche\quiche\deps\boringssl -Force
          git clone --depth=1 https://github.com/google/boringssl
          rustup target add x86_64-pc-windows-gnu
          rustup default stable-gnu
          cd C:\quiche
          cargo build --package quiche --release --features ffi,pkg-config-meta,qlog
          ls C:\quiche\quiche\deps\boringssl
      - name: Package Directories
        run: |
          mkdir C:\quiche_install\lib
          cp -r C:\quiche\target\release C:\quiche_install\lib -Force
          cp -r C:\quiche\quiche\include C:\quiche_install -Force
          7z a quiche_MinGW64_shared.7z C:\quiche_install
      - uses: actions/upload-artifact@v3
        with:
          name: quiche_MinGW64_shared
          path: quiche_MinGW64_shared.7z
  # curl-vc143-dyn-build:
  #   name: Curl vc143 Dyn Build
  #   runs-on: windows-2022
  #   steps:
  #     - name: Set Mingw64 Ninja
  #       run: |
  #         (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
  #         7z x -aoa -oC:\ninja ninja-win.zip
  #         rm ninja-win.zip
  #         cd C:\ ; git clone --depth=1 https://github.com/curl/curl.git -b curl-7_88_1
  #         git clone --depth=1 https://github.com/google/brotli.git
  #     - uses: ilammy/msvc-dev-cmd@v1
  #       with:
  #         arch: amd64
  #         toolset: 14.3
  #     - name: Build
  #       run: |
  #         cd C:\vcpkg ; git pull ; ./bootstrap-vcpkg.bat ; vcpkg install zstd:x64-windows zlib:x64-windows nghttp2:x64-windows

  #         cd C:\brotli
  #         cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:\brotli_install -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
  #         ninja ; ninja install

  #         $env:Path = "C:\ninja;C:\brotli_install\lib;C:\brotli_install\include;C:\vcpkg\installed\x64-windows\lib;C:\vcpkg\installed\x64-windows\include;$env:Path"
  #         cd C:\curl ; mkdir build ; cd build
  #         cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_CURL_EXE=OFF -DBUILD_TESTING=OFF -DCURL_USE_SCHANNEL=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=C:/curl_install -DCURL_USE_LIBSSH2=OFF -DCURL_BROTLI=ON -DCURL_ZSTD=ON -DUSE_NGHTTP2=ON -DUSE_WEBSOCKETS=ON -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
  #         ninja ; ninja install
  #     - name: Package Directories
  #       run: |
  #         cp -r C:\vcpkg\installed\x64-windows\lib C:\curl_install -Force
  #         cp -r C:\vcpkg\installed\x64-windows\include C:\curl_install -Force
  #         cp -r C:\brotli_install\lib C:\curl_install -Force
  #         cp -r C:\brotli_install\include C:\curl_install -Force
  #         7z a curl_VC143_Dyn.7z C:\curl
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: curl_VC143_Dyn
  #         path: curl_VC143_Dyn.7z

  # curl-vc143-build-msquic:
  #   name: Curl vc143 Build With MsQuic
  #   runs-on: windows-2022
  #   steps:
  #     - name: Set Mingw64 Ninja
  #       run: |
  #         (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
  #         7z x -aoa -oC:\ninja ninja-win.zip
  #         rm ninja-win.zip
  #         (new-object System.Net.WebClient).DownloadFile('https://curl.se/download/curl-7.88.1.zip','curl.zip')
  #         7z x -aoa -oC:\ curl.zip
  #         rm curl.zip
  #         # (new-object System.Net.WebClient).DownloadFile('https://github.com/axojhf/cpp_library_build/releases/download/msquic-build/MsQuic_VC143_Static.7z','msquic.7z')
  #         # 7z x -aoa -oC:\ msquic.7z
  #         # rm msquic.7z
  #         cd C:\ ; git clone --depth=1 https://github.com/nibanks/msh3.git
  #     - uses: ilammy/msvc-dev-cmd@v1
  #       with:
  #         arch: amd64
  #         toolset: 14.3
  #     - name: Build
  #       run: |
  #         cd C:\vcpkg
  #         git pull
  #         ./bootstrap-vcpkg.bat
  #         vcpkg install zstd:x64-windows-static zlib:x64-windows-static nghttp2:x64-windows-static

  #         cd C:\msh3 ; git submodule update --init --recursive ; mkdir build ; cd build
  #         cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DQUIC_BUILD_SHARED=OFF -DCMAKE_INSTALL_PREFIX=C:/msh3_install
  #         ninja ; ninja install

  #         Copy-Item -Path C:\msh3_install\include -Destination C:\vcpkg\installed\x64-windows-static -Recurse -Force
  #         Copy-Item -Path C:\msh3_install\lib -Destination C:\vcpkg\installed\x64-windows-static -Recurse -Force
  #         Copy-Item -Path C:\msh3_install\share -Destination C:\vcpkg\installed\x64-windows-static -Recurse -Force
  #         $env:Path = "C:\ninja;C:\msh3_install\include;C:\msh3_install\lib;C:\vcpkg\installed\x64-windows-static\lib;C:\vcpkg\installed\x64-windows-static\include;$env:Path"
  #         cd C:/curl-7.88.1 ; mkdir build ; cd build
  #         cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_CURL_EXE=OFF -DBUILD_TESTING=OFF -DCURL_USE_SCHANNEL=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:/curl -DCURL_USE_LIBSSH2=OFF -DCURL_BROTLI=OFF -DCURL_ZSTD=ON -DUSE_NGHTTP2=ON -DUSE_WEBSOCKETS=ON -DUSE_MSH3=ON -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
  #         ninja ; ninja install
  #     - name: Package Directories
  #       run: |
  #         Copy-Item -Path 'C:\vcpkg\installed\x64-windows-static\lib' -Destination 'C:\curl' -Recurse -Force
  #         Copy-Item -Path C:\vcpkg\installed\x64-windows-static\include -Destination C:\curl -Recurse -Force
  #         # Copy-Item -Path C:\msquic_install -Destination C:\curl -Recurse -Force
  #         7z a curl_VC143_Static_msh3.7z C:\curl
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: curl_VC143_Static_msh3
  #         path: curl_VC143_Static_msh3.7z

  # curl-vc143-dyn-build-msquic:
  #   name: Curl vc143 Dyn Build With MsQuic
  #   runs-on: windows-2022
  #   steps:
  #     - name: Set Mingw64 Ninja
  #       run: |
  #         (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
  #         7z x -aoa -oC:\ninja ninja-win.zip
  #         rm ninja-win.zip
  #         (new-object System.Net.WebClient).DownloadFile('https://curl.se/download/curl-7.88.1.zip','curl.zip')
  #         7z x -aoa -oC:\ curl.zip
  #         rm curl.zip
  #         #  (new-object System.Net.WebClient).DownloadFile('https://github.com/axojhf/cpp_library_build/releases/download/msquic-build/MsQuic_VC143_Static.7z','msquic.7z')
  #         # 7z x -aoa -oC:\ msquic.7z
  #         # rm msquic.7z
  #         cd C:\ ; git clone --depth=1 https://github.com/nibanks/msh3.git
  #     - uses: ilammy/msvc-dev-cmd@v1
  #       with:
  #         arch: amd64
  #         toolset: 14.3
  #     - name: Build
  #       run: |
  #         cd C:\vcpkg
  #         git pull
  #         ./bootstrap-vcpkg.bat
  #         vcpkg install zstd:x64-windows zlib:x64-windows nghttp2:x64-windows

  #         cd C:\msh3 ; git submodule update --init --recursive ; mkdir build ; cd build
  #         cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DQUIC_BUILD_SHARED=ON -DCMAKE_INSTALL_PREFIX=C:/msh3_install
  #         ninja ; ninja install

  #         Copy-Item -Path C:\msh3_install\include -Destination C:\vcpkg\installed\x64-windows -Recurse -Force
  #         Copy-Item -Path C:\msh3_install\lib -Destination C:\vcpkg\installed\x64-windows -Recurse -Force
  #         Copy-Item -Path C:\msh3_install\share -Destination C:\vcpkg\installed\x64-windows -Recurse -Force
  #         $env:Path = "C:\ninja;C:\msh3_install\include;C:\msh3_install\lib;C:\vcpkg\installed\x64-windows-static\lib;C:\vcpkg\installed\x64-windows-static\include;$env:Path"
  #         cd C:/curl-7.88.1 ; mkdir build ; cd build
  #         cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DBUILD_CURL_EXE=OFF -DBUILD_TESTING=OFF -DCURL_USE_SCHANNEL=ON -DCMAKE_INSTALL_PREFIX=C:/curl -DCURL_USE_LIBSSH2=OFF -DCURL_BROTLI=OFF -DCURL_ZSTD=ON -DUSE_NGHTTP2=ON -DUSE_WEBSOCKETS=ON -DUSE_MSH3=ON -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
  #         ninja ; ninja install
  #     - name: Package Directories
  #       run: |
  #         Copy-Item -Path C:\vcpkg\installed\x64-windows\lib -Destination C:\curl -Recurse -Force
  #         Copy-Item -Path C:\vcpkg\installed\x64-windows\include -Destination C:\curl -Recurse -Force
  #         Copy-Item -Path C:\vcpkg\installed\x64-windows\bin -Destination C:\curl -Recurse -Force
  #         7z a curl_VC143_Dyn_msh3.7z C:\curl
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: curl_VC143_Dyn_msh3
  #         path: curl_VC143_Dyn_msh3.7z