name: curl cpr quic huge Build

on:
  push:
    branches:
      - curl-cpr-quic-huge
jobs:
  curl-cpr-quic-huge-mingw64-static:
    name: Cpr Curl Huge MinGW64 Static Build
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3
      - name: Set Mingw64 Ninja
        run: |
          (new-object System.Net.WebClient).DownloadFile('https://github.com/cristianadam/mingw-builds/releases/download/v11.2.0-rev3/x86_64-11.2.0-release-posix-seh-rt_v9-rev3.7z','mingw64.7z')
          7z x -aoa -oC:\ mingw64.7z ; rm mingw64.7z
          (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
          7z x -aoa -oC:\ninja ninja-win.zip ; rm ninja-win.zip
          mv fix_libcurl_pc.ps1 C:\fix_libcurl_pc.ps1
          cd C:\ ; git clone --depth=1 https://github.com/curl/curl.git -b curl-7_88_1
          git clone --depth=1 https://github.com/google/brotli.git
          # git clone --depth=1 https://github.com/nibanks/msh3.git
          git clone --depth 1 --recursive https://github.com/cloudflare/quiche
          git clone --depth 1 https://github.com/axojhf/cpr.git -b mod
      - name: Build
        run: |
          $env:Path = "C:\mingw64\bin;C:\ninja;$env:Path"

          cd C:\vcpkg ; git pull ; ./bootstrap-vcpkg.bat
          vcpkg install zstd:x64-mingw-static zlib:x64-mingw-static nghttp2:x64-mingw-static
          
          cd C:\brotli
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:\brotli_install -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          ninja ; ninja install
          
          cd C:\quiche ; cargo build --package quiche --release --features ffi,pkg-config-meta,qlog

          $env:Path = "C:\quiche\target\release;C:\brotli_install\lib;C:\brotli_install\include;C:\vcpkg\installed\x64-mingw-static\lib;C:\vcpkg\installed\x64-mingw-static\include;$env:Path"
          cd C:\curl ; mkdir build ; cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_CURL_EXE=OFF -DBUILD_TESTING=OFF -DCURL_USE_SCHANNEL=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:/curl_install -DCURL_USE_LIBSSH2=OFF -DCURL_BROTLI=ON -DCURL_ZSTD=ON -DUSE_NGHTTP2=ON -DUSE_WEBSOCKETS=ON -DUSE_QUICHE=ON -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          ninja ; ninja install

          C:\fix_libcurl_pc.ps1
          $env:Path = "C:\curl_install\lib;C:\curl_install\include;$env:Path"
          $env:PKG_CONFIG_PATH="C:\curl_install\lib\pkgconfig"
          cd C:\cpr ; mkdir build ; cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCPR_USE_SYSTEM_CURL=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:/cpr_install -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          ninja ; ninja install

      - name: Package Directories
        run: |
          cp -r C:\vcpkg\installed\x64-mingw-static\lib C:\cpr_install -Force
          cp -r C:\vcpkg\installed\x64-mingw-static\include C:\cpr_install -Force
          cp -r C:\brotli_install\lib C:\cpr_install -Force
          cp -r C:\brotli_install\include C:\cpr_install -Force
          cp -r C:\curl_install\bin C:\cpr_install -Force
          cp -r C:\curl_install\lib C:\cpr_install -Force
          cp -r C:\curl_install\include C:\cpr_install -Force
          7z a cpr_MinGW64_Static.7z C:\cpr_install
      - uses: actions/upload-artifact@v3
        with:
          name: cpr_MinGW64_Static
          path: cpr_MinGW64_Static.7z

  curl-cpr-quic-huge-mingw64-share:
    name: Cpr Curl Huge MinGW64 Share Build
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3
      - name: Set Mingw64 Ninja
        run: |
          (new-object System.Net.WebClient).DownloadFile('https://github.com/cristianadam/mingw-builds/releases/download/v11.2.0-rev3/x86_64-11.2.0-release-posix-seh-rt_v9-rev3.7z','mingw64.7z')
          7z x -aoa -oC:\ mingw64.7z ; rm mingw64.7z
          (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
          7z x -aoa -oC:\ninja ninja-win.zip ; rm ninja-win.zip
          mv fix_libcurl_pc.ps1 C:\fix_libcurl_pc.ps1
          cd C:\ ; git clone --depth=1 https://github.com/curl/curl.git -b curl-7_88_1
          git clone --depth=1 https://github.com/google/brotli.git
          # git clone --depth=1 https://github.com/nibanks/msh3.git
          git clone --depth 1 --recursive https://github.com/cloudflare/quiche
          git clone --depth 1 https://github.com/axojhf/cpr.git -b mod
      - name: Build
        run: |
          $env:Path = "C:\mingw64\bin;C:\ninja;$env:Path"

          cd C:\vcpkg ; git pull ; ./bootstrap-vcpkg.bat
          vcpkg install zstd:x64-mingw-static zlib:x64-mingw-static nghttp2:x64-mingw-static
          
          cd C:\brotli
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:\brotli_install -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          ninja ; ninja install
          
          cd C:\quiche ; cargo build --package quiche --release --features ffi,pkg-config-meta,qlog

          $env:Path = "C:\quiche\target\release;C:\brotli_install\lib;C:\brotli_install\include;C:\vcpkg\installed\x64-mingw-static\lib;C:\vcpkg\installed\x64-mingw-static\include;$env:Path"
          cd C:\curl ; mkdir build ; cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_CURL_EXE=OFF -DBUILD_TESTING=OFF -DCURL_USE_SCHANNEL=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=C:/curl_install -DCURL_USE_LIBSSH2=OFF -DCURL_BROTLI=ON -DCURL_ZSTD=ON -DUSE_NGHTTP2=ON -DUSE_WEBSOCKETS=ON -DUSE_QUICHE=ON -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          ninja ; ninja install

          C:\fix_libcurl_pc.ps1
          $env:Path = "C:\curl_install\lib;C:\curl_install\include;$env:Path"
          $env:PKG_CONFIG_PATH="C:\curl_install\lib\pkgconfig"
          cd C:\cpr ; mkdir build ; cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCPR_USE_SYSTEM_CURL=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:/cpr_install -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          ninja ; ninja install

      - name: Package Directories
        run: |
          cp -r C:\vcpkg\installed\x64-mingw-static\lib C:\cpr_install -Force
          cp -r C:\vcpkg\installed\x64-mingw-static\include C:\cpr_install -Force
          cp -r C:\brotli_install\lib C:\cpr_install -Force
          cp -r C:\brotli_install\include C:\cpr_install -Force
          cp -r C:\curl_install\bin C:\cpr_install -Force
          cp -r C:\curl_install\lib C:\cpr_install -Force
          cp -r C:\curl_install\include C:\cpr_install -Force
          7z a cpr_MinGW64_Share.7z C:\cpr_install
      - uses: actions/upload-artifact@v3
        with:
          name: cpr_MinGW64_Share
          path: cpr_MinGW64_Share.7z

  curl-cpr-quic-huge-vc143-static:
    name: Cpr Curl Huge vc143 Static Build
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
      - name: Set Ninja
        run: |
          (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
          7z x -aoa -oC:\ninja ninja-win.zip ; rm ninja-win.zip
          mv fix_libcurl_pc.ps1 C:\fix_libcurl_pc.ps1
          cd C:\ ; git clone --depth=1 https://github.com/curl/curl.git -b curl-7_88_1
          git clone --depth=1 https://github.com/google/brotli.git
          git clone --depth=1 https://github.com/nibanks/msh3.git
          git clone --depth 1 https://github.com/axojhf/cpr.git -b mod
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64
          toolset: 14.3
      - name: Build
        run: |
          $env:Path = "C:\ninja;$env:Path"

          cd C:\vcpkg ; git pull ; ./bootstrap-vcpkg.bat
          vcpkg install zstd:x64-windows-static zlib:x64-windows-static nghttp2:x64-windows-static

          cd C:\brotli
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:\brotli_install -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          ninja ; ninja install

          cd C:\msh3 ; git submodule update --init --recursive ; mkdir build ; cd build
          cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX=C:/msh3_install
          ninja ; ninja install

          cp -r C:\msh3_install\include C:\vcpkg\installed\x64-windows-static -Force
          cp -r C:\msh3_install\lib C:\vcpkg\installed\x64-windows-static -Force
          cp -r C:\msh3_install\share C:\vcpkg\installed\x64-windows-static -Force
          $env:Path = "C:\brotli_install\lib;C:\brotli_install\include;C:\vcpkg\installed\x64-windows-static\lib;C:\vcpkg\installed\x64-windows-static\include;$env:Path"
          cd C:\curl ; mkdir build ; cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_CURL_EXE=OFF -DBUILD_TESTING=OFF -DCURL_USE_SCHANNEL=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:/curl_install -DCURL_USE_LIBSSH2=OFF -DCURL_BROTLI=ON -DCURL_ZSTD=ON -DUSE_NGHTTP2=ON -DUSE_WEBSOCKETS=ON -DUSE_MSH3=ON -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          ninja ; ninja install

          C:\fix_libcurl_pc.ps1
          $env:Path = "C:\curl_install\lib;C:\curl_install\include;$env:Path"
          $env:PKG_CONFIG_PATH="C:\curl_install\lib\pkgconfig"
          cd C:\cpr ; mkdir build ; cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCPR_USE_SYSTEM_CURL=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:/cpr_install -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          ninja ; ninja install

      - name: Package Directories
        run: |
          cp -r C:\vcpkg\installed\x64-windows-static\lib C:\cpr_install -Force
          cp -r C:\vcpkg\installed\x64-windows-static\include C:\cpr_install -Force
          cp -r C:\brotli_install\lib C:\cpr_install -Force
          cp -r C:\brotli_install\include C:\cpr_install -Force
          cp -r C:\curl_install\bin C:\cpr_install -Force
          cp -r C:\curl_install\lib C:\cpr_install -Force
          cp -r C:\curl_install\include C:\cpr_install -Force
          7z a cpr_VC143_Static.7z C:\cpr_install
      - uses: actions/upload-artifact@v3
        with:
          name: cpr_VC143_Static
          path: cpr_VC143_Static.7z

  curl-cpr-quic-huge-vc143-dynamic:
    name: Cpr Curl Huge vc143 Share Build
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
      - name: Set Ninja
        run: |
          (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
          7z x -aoa -oC:\ninja ninja-win.zip ; rm ninja-win.zip
          mv fix_libcurl_pc.ps1 C:\fix_libcurl_pc.ps1
          cd C:\ ; git clone --depth=1 https://github.com/curl/curl.git -b curl-7_88_1
          git clone --depth=1 https://github.com/google/brotli.git
          # git clone --depth=1 https://github.com/nibanks/msh3.git
          git clone --depth 1 --recursive https://github.com/cloudflare/quiche
          git clone --depth 1 https://github.com/axojhf/cpr.git -b mod
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64
          toolset: 14.3
      - name: Build
        run: |
          $env:Path = "C:\ninja;$env:Path"

          cd C:\vcpkg ; git pull ; ./bootstrap-vcpkg.bat
          vcpkg install zstd:x64-windows zlib:x64-windows nghttp2:x64-windows

          cd C:\brotli
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=C:\brotli_install -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          ninja ; ninja install

          cd C:\quiche ; cargo build --package quiche --release --features ffi,pkg-config-meta,qlog

          $env:Path = "C:\quiche\target\release;C:\brotli_install\lib;C:\brotli_install\include;C:\vcpkg\installed\x64-windows\lib;C:\vcpkg\installed\x64-windows\include;$env:Path"
          cd C:\curl ; mkdir build ; cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_CURL_EXE=OFF -DBUILD_TESTING=OFF -DCURL_USE_SCHANNEL=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=C:/curl_install -DCURL_USE_LIBSSH2=OFF -DCURL_BROTLI=ON -DCURL_ZSTD=ON -DUSE_NGHTTP2=ON -DUSE_WEBSOCKETS=ON -DUSE_QUICHE=ON -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          ninja ; ninja install

          pwsh C:\fix_libcurl_pc.ps1
          $env:Path = "C:\curl_install\lib;C:\curl_install\include;$env:Path"
          $env:PKG_CONFIG_PATH="C:\curl_install\lib\pkgconfig"
          cd C:\cpr ; mkdir build ; cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCPR_USE_SYSTEM_CURL=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:/cpr_install -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          ninja ; ninja install

      - name: Package Directories
        run: |
          cp -r C:\vcpkg\installed\x64-windows\lib C:\cpr_install -Force
          cp -r C:\vcpkg\installed\x64-windows\include C:\cpr_install -Force
          cp -r C:\vcpkg\installed\x64-windows\bin C:\cpr_install -Force
          cp -r C:\brotli_install\lib C:\cpr_install -Force
          cp -r C:\brotli_install\include C:\cpr_install -Force
          cp -r C:\brotli_install\bin C:\cpr_install -Force
          cp -r C:\curl_install\bin C:\cpr_install -Force
          cp -r C:\curl_install\lib C:\cpr_install -Force
          cp -r C:\curl_install\include C:\cpr_install -Force
          7z a cpr_VC143_Share.7z C:\cpr_install
      - uses: actions/upload-artifact@v3
        with:
          name: cpr_VC143_Share
          path: cpr_VC143_Share.7z