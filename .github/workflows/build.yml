name: Curl with Http3 Build

on:
  push:
    branches:
      - curl-h
jobs:
  # vc143-build:
  #   name: Curl with Http3 vc143 Build
  #   runs-on: windows-2022
  #   steps:
  #     - name: Set Mingw64 Ninja
  #       run: |
  #         # (new-object System.Net.WebClient).DownloadFile('https://github.com/cristianadam/mingw-builds/releases/download/v11.2.0-rev3/x86_64-11.2.0-release-posix-seh-rt_v9-rev3.7z','mingw64.7z')
  #         # 7z x -aoa -oC:\ mingw64.7z ; rm mingw64.7z
  #         (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
  #         7z x -aoa -oC:\ninja ninja-win.zip ; rm ninja-win.zip
  #         (new-object System.Net.WebClient).DownloadFile('https://www.nasm.us/pub/nasm/releasebuilds/2.16.01/win64/nasm-2.16.01-win64.zip','nasm.zip')
  #         7z x -aoa -oC:\ nasm.zip ; rm nasm.zip
  #         cd C:\ ; git clone --depth=1 --recursive https://github.com/wolfSSL/wolfssl.git -b v5.6.3-stable
  #         git clone --depth=1 --recursive https://github.com/ngtcp2/nghttp3
  #         git clone --depth=1 --recursive https://github.com/ngtcp2/ngtcp2
  #         git clone --depth=1 https://github.com/curl/curl.git -b curl-8_3_0
  #         git clone --depth=1 https://github.com/google/brotli.git

  #     - uses: ilammy/msvc-dev-cmd@v1
  #       with:
  #         arch: amd64
  #         toolset: 14.3
  #     - name: Build
  #       run: |
  #         $env:Path = "C:\ninja;C:\nasm-2.16.01;$env:Path"
  #         cd C:\wolfssl ; mkdir build ; cd build
  #         cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:\wolfssl_install -DWOLFSSL_SESSION_TICKET=ON -DWOLFSSL_PSK=ON -DWOLFSSL_CRYPT_TESTS=OFF -DWOLFSSL_EXAMPLES=OFF
  #         ninja ; ninja install

  #         cd C:\nghttp3 ; mkdir build ; cd build
  #         cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:\nghttp3_install -DENABLE_LIB_ONLY=ON
  #         ninja nghttp3_static ; ninja install
  #         rm C:/nghttp3_install/lib/libnghttp3.dll.a

  #         $env:Path = "C:\wolfssl_install;C:\nghttp3_install;$env:Path"
  #         cd C:\ngtcp2 ; mkdir build ; cd build
  #         cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:\ngtcp2_install -DENABLE_WOLFSSL=ON
  #         ninja ngtcp2_static ; ninja install

  #         cd C:\vcpkg ; git pull ; ./bootstrap-vcpkg.bat ; vcpkg install zstd:x64-windows-static zlib:x64-windows-static nghttp2:x64-windows-static

  #         cd C:\brotli
  #         cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:\brotli_install -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
  #         ninja ; ninja install

  #         $env:Path = "C:\ngtcp2_install;C:\brotli_install\lib;C:\brotli_install\include;C:\vcpkg\installed\x64-windows-static\lib;C:\vcpkg\installed\x64-windows-static\include;$env:Path"
  #         cd C:\curl ; mkdir build ; cd build
  #         cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_CURL_EXE=OFF -DBUILD_TESTING=OFF -DCURL_USE_WOLFSSL=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:\curl_install -DCURL_USE_LIBSSH2=OFF -DCURL_BROTLI=ON -DUSE_NGHTTP2=ON -DUSE_WEBSOCKETS=ON -DUSE_NGTCP2=ON -DUSE_NGHTTP3=ON -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
  #         ninja ; ninja install
  #     - name: Package Directories
  #       run: |
  #         cp -r C:\vcpkg\installed\x64-windows-static\lib C:\curl_install -Force
  #         cp -r C:\vcpkg\installed\x64-windows-static\include C:\curl_install -Force
  #         cp -r C:\brotli_install\lib C:\curl_install -Force
  #         cp -r C:\brotli_install\include C:\curl_install -Force
  #         cp -r C:\wolfssl_install\lib C:\curl_install -Force
  #         cp -r C:\wolfssl_install\include C:\curl_install -Force
  #         cp -r C:\nghttp3_install\lib C:\curl_install -Force
  #         cp -r C:\nghttp3_install\include C:\curl_install -Force
  #         7z a curl_vc143_static_h3.7z C:\curl_install
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: curl_vc143_static_h3
  #         path: curl_vc143_static_h3.7z
  #     # - name: Update Cpr Release
  #     #   uses: softprops/action-gh-release@v1
  #     #   with:
  #     #     tag_name: cpr-build
  #     #     files: |
  #     #       cpr_MinGW64_Static.7z

  mingw-build:
    name: Curl with Http3 MinGW Build
    runs-on: windows-2022
    steps:
      - name: Set Mingw64 Ninja
        run: |
          (new-object System.Net.WebClient).DownloadFile('https://github.com/cristianadam/mingw-builds/releases/download/v11.2.0-rev3/x86_64-11.2.0-release-posix-seh-rt_v9-rev3.7z','mingw64.7z')
          7z x -aoa -oC:\ mingw64.7z ; rm mingw64.7z
          (new-object System.Net.WebClient).DownloadFile('https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip','ninja-win.zip')
          7z x -aoa -oC:\ninja ninja-win.zip ; rm ninja-win.zip
          (new-object System.Net.WebClient).DownloadFile('https://www.nasm.us/pub/nasm/releasebuilds/2.16.01/win64/nasm-2.16.01-win64.zip','nasm.zip')
          7z x -aoa -oC:\ nasm.zip ; rm nasm.zip
          cd C:\ ; git clone --depth=1 --recursive https://github.com/wolfSSL/wolfssl.git -b v5.6.3-stable
          git clone --depth=1 --recursive https://github.com/ngtcp2/nghttp3
          git clone --depth=1 --recursive https://github.com/ngtcp2/ngtcp2
          git clone --depth=1 https://github.com/curl/curl.git -b curl-8_3_0
          git clone --depth=1 https://github.com/google/brotli.git
      - name: Build
        run: |
          $env:Path = "C:\mingw64\bin;C:\ninja;C:\nasm-2.16.01;$env:Path"
          cd C:\wolfssl ; mkdir build ; cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:\wolfssl_install -DWOLFSSL_SESSION_TICKET=ON -DWOLFSSL_PSK=ON -DWOLFSSL_CRYPT_TESTS=OFF -DWOLFSSL_EXAMPLES=OFF
          ninja ; ninja install

          cd C:\nghttp3 ; mkdir build ; cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DENABLE_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=C:\nghttp3_install -DENABLE_LIB_ONLY=ON
          ninja ; ninja install

          # $env:Path = "C:\wolfssl_install;C:\nghttp3_install;$env:Path"
          # cd C:\ngtcp2 ; mkdir build ; cd build
          # cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DENABLE_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=C:\ngtcp2_install -DENABLE_WOLFSSL=ON
          # ninja ngtcp2_static ; ninja install
      - uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
      - shell: msys2 {0}
        run: |
          pacman -S --noconfirm mingw-w64-x86_64-autotools 
          export PATH="/c/mingw64/bin:/c/wolfssl_install:/c/nghttp3_install:$PATH"
          cd /c/ngtcp2
          autoreconf -i
          ./configure --enable-lib-only --with-wolfssl --prefix=/c/ngtcp2_install
          mingw32-make -j
          
      - name: Build
        run: |
          $env:Path = "C:\mingw64\bin;C:\ninja;C:\nasm-2.16.01;C:\wolfssl_install;C:\nghttp3_install;C:\ngtcp2_install;C:\brotli_install;C:\vcpkg\installed\x64-windows-static\lib;C:\vcpkg\installed\x64-windows-static\include;$env:Path"
          cd C:\vcpkg ; git pull ; ./bootstrap-vcpkg.bat ; vcpkg install zstd:x64-windows-static zlib:x64-windows-static nghttp2:x64-windows-static
          cd C:\brotli
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:\brotli_install -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          ninja ; ninja install

          cd C:\curl ; mkdir build ; cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_CURL_EXE=OFF -DBUILD_TESTING=OFF -DCURL_USE_WOLFSSL=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=C:\curl_install -DCURL_USE_LIBSSH2=OFF -DCURL_BROTLI=ON -DUSE_NGHTTP2=ON -DUSE_WEBSOCKETS=ON -DUSE_NGTCP2=ON -DUSE_NGHTTP3=ON -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          ninja ; ninja install
      - name: Package Directories
        run: |
          cp -r C:\vcpkg\installed\x64-windows-static\lib C:\curl_install -Force
          cp -r C:\vcpkg\installed\x64-windows-static\include C:\curl_install -Force
          cp -r C:\brotli_install\lib C:\curl_install -Force
          cp -r C:\brotli_install\include C:\curl_install -Force
          cp -r C:\wolfssl_install\lib C:\curl_install -Force
          cp -r C:\wolfssl_install\include C:\curl_install -Force
          cp -r C:\nghttp3_install\lib C:\curl_install -Force
          cp -r C:\nghttp3_install\include C:\curl_install -Force
          7z a curl_vc143_static_h3.7z C:\curl_install
      - uses: actions/upload-artifact@v3
        with:
          name: curl_vc143_static_h3
          path: curl_vc143_static_h3.7z
      # - name: Update Cpr Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     tag_name: cpr-build
      #     files: |
      #       cpr_MinGW64_Static.7z